/****************************************************************************
** Meta object code from reading C++ file 'test_application.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.4.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'test_application.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.4.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_TestApplication_t {
    QByteArrayData data[15];
    char stringdata[179];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestApplication_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestApplication_t qt_meta_stringdata_TestApplication = {
    {
QT_MOC_LITERAL(0, 0, 15), // "TestApplication"
QT_MOC_LITERAL(1, 16, 4), // "init"
QT_MOC_LITERAL(2, 21, 0), // ""
QT_MOC_LITERAL(3, 22, 15), // "initApplication"
QT_MOC_LITERAL(4, 38, 6), // "create"
QT_MOC_LITERAL(5, 45, 8), // "addIndex"
QT_MOC_LITERAL(6, 54, 9), // "editIndex"
QT_MOC_LITERAL(7, 64, 11), // "removeIndex"
QT_MOC_LITERAL(8, 76, 9), // "addModule"
QT_MOC_LITERAL(9, 86, 10), // "editModule"
QT_MOC_LITERAL(10, 97, 12), // "removeModule"
QT_MOC_LITERAL(11, 110, 11), // "saveAndLoad"
QT_MOC_LITERAL(12, 122, 15), // "simpleComputing"
QT_MOC_LITERAL(13, 138, 21), // "exportImportIndicator"
QT_MOC_LITERAL(14, 160, 18) // "exportImportModule"

    },
    "TestApplication\0init\0\0initApplication\0"
    "create\0addIndex\0editIndex\0removeIndex\0"
    "addModule\0editModule\0removeModule\0"
    "saveAndLoad\0simpleComputing\0"
    "exportImportIndicator\0exportImportModule"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestApplication[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      13,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   79,    2, 0x08 /* Private */,
       3,    0,   80,    2, 0x08 /* Private */,
       4,    0,   81,    2, 0x08 /* Private */,
       5,    0,   82,    2, 0x08 /* Private */,
       6,    0,   83,    2, 0x08 /* Private */,
       7,    0,   84,    2, 0x08 /* Private */,
       8,    0,   85,    2, 0x08 /* Private */,
       9,    0,   86,    2, 0x08 /* Private */,
      10,    0,   87,    2, 0x08 /* Private */,
      11,    0,   88,    2, 0x08 /* Private */,
      12,    0,   89,    2, 0x08 /* Private */,
      13,    0,   90,    2, 0x08 /* Private */,
      14,    0,   91,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestApplication::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestApplication *_t = static_cast<TestApplication *>(_o);
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->initApplication(); break;
        case 2: _t->create(); break;
        case 3: _t->addIndex(); break;
        case 4: _t->editIndex(); break;
        case 5: _t->removeIndex(); break;
        case 6: _t->addModule(); break;
        case 7: _t->editModule(); break;
        case 8: _t->removeModule(); break;
        case 9: _t->saveAndLoad(); break;
        case 10: _t->simpleComputing(); break;
        case 11: _t->exportImportIndicator(); break;
        case 12: _t->exportImportModule(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestApplication::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestApplication.data,
      qt_meta_data_TestApplication,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *TestApplication::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestApplication::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_TestApplication.stringdata))
        return static_cast<void*>(const_cast< TestApplication*>(this));
    return QObject::qt_metacast(_clname);
}

int TestApplication::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 13)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 13;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 13)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 13;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
